
**********************
Day 12 - 4th June 2024 
**********************				

	Containerization Using Docker ::::
	
	
		- Used to deploy Micro-Service based Applications
	
	
	Containerization ::
	
		It is a process of packing the application along with its dependencies
		
	Developers' Deployments Perspective ::
	
		- src_code 
		
		- build 
		
		- created artifacts 			mywebapp.war 
		
		- unit testing 
		
					-- mywebapp.war --> jdk11, tomcat8.5 == successful
					
				
					Package (mywebapp.war,jdk11,tomcat8.5)	--> mywebappImg:v1.0 --> Application Image
					
					promote the image to container registry.
					
		
		- promote the application to target environment (QA/UAT/PROD)
		
		QA Environment ::
		
					-- mywebapp.war --> jdk11, tomcat8.5 
					
					-- compatibility issue 
	
					mywebappImg:v1.0
					
	
	Infra-Structure Perspective ::
	
		- Containerization are used to reduce the no. of VMs.
		
			Jenkins_Master_Node	--> Installed Jenkins 
									Used to Create CICD Pipeline Jobs/Projects and Scheduled to run in slave nodes					
				Jenkins_Slave_Node1 	Java Application 	- Build tool (maven) jdk11
				Jenkins_Slave_Node1.1 	Java Application 	- Build tool (maven) jkd17
				Jenkins_Slave_Node2 	Python		
				Jenkins_Slave_Node3 	NodeJS
				Jenkins_Slave_Node4 	NodeJS
				Jenkins_Slave_Node5 	.Net		Wnds	


			Using Containers ::
			
			
			Jenkins_Master (VM)
			
				Jenkins_Slave Node (VM)
					Container Engine 		# Used create and Manage containers
						C1 		java 
						C2		python 
						C3		NodeJs
						C4		Angular
						C5		.net
			
		
	Terminologies ::

		Virtual Machine :
		
			- VMs are Hardware level virtualization 
			
			- VMs are created using Hypervisor 
			
			- VMs are basically used to run the Operating System 
			
			- VMs will continue to run and consume resources even if there is no active task/applications
			
			- VMs consume more space and time to start-up.
					
		Container :
		
			- Containers are the OS level Virtualization
					- Namespace / Control Group 
					- Completed Isolated

			- Containers are created using Container-Engine
			
			- Containers are used to run the Applications/Tasks NOT just the Operating System.
			
			- Containers will immediately go to exit state, if there is no task/applications to run.
			
			- Just to free-up the resources 
			
			- It is faster and consume less volume compared to VMs
			
			
		Images 				# Is a static file defines the properties(application & Dependencies) of the container 
							# it composed of various layers created using Dockerfile Instructions
							# Images are Non-Executable
		
		Container 			# These are created using Container Images 
							# These are Executable entities of Container Image 
		
		Container Engine 	# Is used create Container Images, Containers and Manage the containers
							# Docker Container Engine
		
		Container Registry 	# Is used to maintain the Container Images / Version control the images at enterprise level 
							# dockerhub  - https://hub.docker.com/
							AWS 	- ECS,ECR,EKS
							Azure 	- ACS,ACR,AKS
							GCP 	- GCE,GCR,GKE						
		
		Container Repository
							# Is a sub-set of Container Registry
		
			
		Version Control :
		
			Source_Code 	--> github 					*.java 
			
			Artifacts 		--> Jfrog Artifactory		*.war 
			
			Container Images -> dockerhub 				mywebappImg:v1.0
			
			
		Working with Docker :::

		Create dockerhub account 		
		
			QA_Server: 100 of services
				Container Engine 
					C1,2,3,4,5,6,7 - tomcat - run - *.war

				 tomcat - 8080  *.war
				 tomcat - 8085  *.war
			 
		Install Docker Engine 			https://docs.docker.com/engine/install/
		
			- In jenkins slave Node 
			
				sudo apt install docker.io -y
				
				docker --version 		
			
			docker cli 		# Command line utility to work with docker containers
			
				docker --version
				
				docker pull 		# used to just download the docker image from container registry to local machine 
				
				docker run 
				
				
			
